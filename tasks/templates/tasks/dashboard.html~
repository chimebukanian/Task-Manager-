<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tasky Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">Tasky Dashboard</h1>
        <div class="mb-4">
            <input type="text" id="search" placeholder="Search tasks..." class="p-2 border rounded">
            <button id="add-task" class="bg-blue-500 text-white p-2 rounded">Add Task</button>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div id="in-progress" class="bg-white p-4 rounded shadow">
                <h2 class="text-lg font-semibold mb-2">In Progress</h2>
                <!-- Tasks will be dynamically inserted here -->
            </div>
            <div id="completed" class="bg-white p-4 rounded shadow">
                <h2 class="text-lg font-semibold mb-2">Completed</h2>
                <!-- Tasks will be dynamically inserted here -->
            </div>
            <div id="overdue" class="bg-white p-4 rounded shadow">
                <h2 class="text-lg font-semibold mb-2">Over-Due</h2>
                <!-- Tasks will be dynamically inserted here -->
            </div>
        </div>
    </div>

    <!-- Task Modal -->
    <div id="task-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <h3 id="modal-title" class="text-lg font-semibold mb-4">Add/Edit Task</h3>
            <form id="task-form">
                <input type="text" id="task-title" placeholder="Title" class="w-full p-2 mb-2 border rounded" required>
                <textarea id="task-description" placeholder="Description" class="w-full p-2 mb-2 border rounded" required></textarea>
                <select id="task-priority" class="w-full p-2 mb-2 border rounded" required>
                    <option value="LOW">Low</option>
                    <option value="MEDIUM">Medium</option>
                    <option value="HIGH">High</option>
                </select>
                <input type="datetime-local" id="task-due-date" class="w-full p-2 mb-2 border rounded" required>
                <input type="text" id="task-category" placeholder="Category" class="w-full p-2 mb-2 border rounded" required>
                <button type="submit" class="bg-blue-500 text-white p-2 rounded">Save Task</button>
                <button type="button" id="close-modal" class="bg-gray-500 text-white p-2 rounded">Cancel</button>
            </form>
        </div>
    </div>

    <script>
    // Django URL configuration
    var taskUrls = {
        'IN_PROGRESS': "{% url 'tasks:get_tasks' 'IN_PROGRESS' %}",
        'COMPLETED': "{% url 'tasks:get_tasks' 'COMPLETED' %}",
        'OVERDUE': "{% url 'tasks:get_tasks' 'OVERDUE' %}"
    };
    var addTaskUrl = "{% url 'tasks:add_task' %}";

    var updateTaskUrl = "{% url 'tasks:update_task' 0 %}";
    var deleteTaskUrl = "{% url 'tasks:delete_task' 0 %}";
    var searchTasksUrl = "{% url 'tasks:search_tasks' %}";
    </script>

p    <script>
        $(document).ready(function() {
            function loadTasks(status) {
                $.get(taskUrls[status], function(data) {
                    const container = $(`#${status.toLowerCase()}`);
                    container.find('.task').remove();
                    data.forEach(task => {
                        container.append(`
                            <div class="task bg-gray-200 p-2 mb-2 rounded" data-id="${task.id}" draggable="true">
                                <h3 class="font-semibold">${task.title}</h3>
                                <p>${task.description}</p>
                                <span class="priority ${task.priority.toLowerCase()}">${task.priority}</span>
                                <span class="due-date">${new Date(task.due_date).toLocaleString()}</span>
                                <button class="edit-task">Edit</button>
                                <button class="delete-task">Delete</button>
                            </div>
                        `);
                    });
                    setupDragAndDrop();
                });
            }

            function setupDragAndDrop() {
                // ... (drag and drop setup code remains the same)
            }

            function dragMoveListener(event) {
                // ... (drag move listener code remains the same)
            }

            function updateTaskStatus(taskId, newStatus) {
                $.ajax({
                    url: updateTaskUrl.replace('0', taskId),
                    method: 'PUT',
                    data: JSON.stringify({ status: newStatus }),
                    contentType: 'application/json',
                    success: function() {
                        loadTasks('IN_PROGRESS');
                        loadTasks('COMPLETED');
                        loadTasks('OVERDUE');
                    }
                });
            }

            $('#search').on('input', function() {
	    
                const query = $(this).val();
                $.get(searchTasksUrl + '?q=' + query, function(data) {
                    // Update task lists with search results
                });
            });

            $('#add-task').click(function() {
                $('#modal-title').text('Add Task');
                $('#task-form')[0].reset();
                $('#task-modal').removeClass('hidden');
            });

            $('#close-modal').click(function() {
                $('#task-modal').addClass('hidden');
            });

            $('#task-form').submit(function(e) {
                e.preventDefault();
                const taskData = {
                    title: $('#task-title').val(),
                    description: $('#task-description').val(),
                    priority: $('#task-priority').val(),
                    due_date: $('#task-due-date').val(),
                    category: $('#task-category').val()
                };
		let csrftoken = '{{ csrf_token }}'
                $.ajax({
                    url: addTaskUrl,
                    method: 'POST',
		    headers:{'X-CSRFToken':csrftoken},
		    
                    data: JSON.stringify(taskData),
                    contentType: 'application/json',
                    success: function() {
		    
                        $('#task-modal').addClass('hidden');
                        loadTasks('IN_PROGRESS');
                    }
                });
		});

            $(document).on('click', '.edit-task', function() {
                const taskId = $(this).closest('.task').data('id');
                // Fetch task details and populate the form
                $('#modal-title').text('Edit Task');
                $('#task-modal').removeClass('hidden');
            });

            $(document).on('click', '.delete-task', function() {
                const taskId = $(this).closest('.task').data('id');
                if (confirm('Are you sure you want to delete this task?')) {
                    $.ajax({
                        url: deleteTaskUrl.replace('0', taskId),
                        method: 'DELETE',
                        success: function() {
                            loadTasks('IN_PROGRESS');
                            loadTasks('COMPLETED');
                            loadTasks('OVERDUE');
                        }
                    });
                }
            });

            loadTasks('IN_PROGRESS');
            loadTasks('COMPLETED');
            loadTasks('OVERDUE');
        });
    </script>
</body>
</html>
